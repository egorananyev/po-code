ws$contr <- round(ws$maxContr,3)
library(plyr)
#library('R.matlab')
library(ggplot2)
dataDir <- 'C:/Users/Egor/Dropbox/Projects/po/po-data/'
inFileName = 'po-cond01_s1008_d0_2015-11-26_102329'
# dataDir <- '~/Dropbox/Projects/po/po-data/'
ws = read.csv(paste(dataDir,inFileName,'.csv',sep=''))
inColNames = read.csv(paste(dataDir,inFileName,'_colNames.csv',sep=''),
header=F)
colnames(ws) <- t(inColNames)
ws$contr <- round(ws$maxContr,3)
ws$contr2 <- round(ws$maxContr,2)
unique(ws$contr)
# display the number of unique instances of contrast:
table(ws$contr)
# count the number of hits and misses
ws$unSeen[ws$respSubjVis==1] <- 'unseen'
ws$unSeen[ws$respSubjVis>=2] <- 'seen'
# converting to factor:
ws$curStairc <- as.factor(ws$curStairc)
```
str(ws)
str(factor(ws[,c('respOdt','respSubjVis')]))
ws[,c('respOdt','respSubjVis'))]
ws[,c('respOdt','respSubjVis')]
ws$colnames
colnames(ws)
head(ws)
dataDir <- 'C:/Users/Egor/Dropbox/Projects/po/po-data/'
inFileName <- c('po-cond01_s1004_d0_2015-11-25_173805',
'po-cond01_s1005_d1_2015-11-24_155056',
'po-cond01_s1006_d1_2015-11-24_171945',
'po-cond01_s1007_d0_2015-11-25_162543')
subjIDs <- c('1004','1005','1006','1007')
ws <- data.frame()
inColNames = read.csv(paste(dataDir,inFileName[1],'_colNames.csv',sep=''),
header=F)
inColNames
inColNames = read.csv(paste(dataDir,inFileName[2],'_colNames.csv',sep=''),
header=F)
inColNames
dataDir <- 'C:/Users/Egor/Dropbox/Projects/po/po-data/'
inFileName <- c('po-cond01_s1004_d0_2015-11-25_173805',
'po-cond01_s1005_d1_2015-11-24_155056',
'po-cond01_s1006_d1_2015-11-24_171945',
'po-cond01_s1007_d0_2015-11-25_162543',
'po-cond01_s1008_d0_2015-11-26_102329')
subjIDs <- c('1004','1005','1006','1007','1008')
ws <- data.frame()
inColNames = read.csv(paste(dataDir,inFileName[2],'_colNames.csv',sep=''),
header=F)
inColNames = read.csv(paste(dataDir,inFileName[2],'_colNames.csv',sep=''),
header=F)
(inColNames)
matrix(inColNames)
as.vector(inColNames)
[as.vector(inColNames)]
inColNames
t(inColNames)
t(inColNames)[,1]
a <- t(inColNames)
a$[,1]
a[,1]
a
a$[,1]
a[,1]
cat(a[,1])
str(cat(a[,1]))
str(inColNames)
str(t(inColNames))
t(inColNames)
str(t(inColNames))
t(inColNames[,1])
t(inColNames)[,1]
inColNames
cat(inColNames)
a <- c('a','b','c')
a
str(a)
bob <- data.frame(lapply(inColNames, as.character), stringsAsFactors=FALSE)
bob
bob[] <- lapply(inColNames, as.character)
bob
inColNames
i=1
ss <- read.csv(paste(dataDir,inFileName[i],'.csv',sep=''))
a <- data.frame(c=c('a','b','c'))
b <- data.frame(c=c('d','e','f'))
a
b
merge(a,b,by='c')
merge(a,b,by.x='c')
merge(a,b,by.y='c')
merge(a,b)
merge(a,b)
library(plyr)
library(ggplot2)
#library('R.matlab')
dataDir <- '~/Dropbox/Projects/po/po-data/'
# dataDir <- 'C:/Users/Egor/Dropbox/Projects/po/po-data/'
inFileName <- c('po-cond01_s1004_d0_2015-11-25_173805',
'po-cond01_s1005_d1_2015-11-24_155056',
'po-cond01_s1006_d1_2015-11-24_171945',
'po-cond01_s1007_d0_2015-11-25_162543',
'po-cond01_s1008_d0_2015-11-26_102329',
'po-cond01_s1009_d1_2015-11-26_111619',
'po-cond01_s1001_d1_2015-11-26_120543')
subjIDs <- c('1004','1005','1006','1007','1008','1009','1010')
inColNames <- read.csv(paste(dataDir,inFileName[6],'_colNames.csv',sep=''),
header=F)
inColNames <- as.character(t(inColNames))
dataDir <- 'C:/Users/Egor/Dropbox/Projects/po/po-data/'
inFileName <- c('po-cond01_s1004_d0_2015-11-25_173805',
'po-cond01_s1006_d1_2015-11-24_171945',
'po-cond01_s1008_d0_2015-11-26_102329',
'po-cond01_s1009_d1_2015-11-26_111619',
subjIDs <- c('1004','1005','1006','1007','1008','1009','1010')
ws <- data.frame()
'po-cond01_s1001_d1_2015-11-26_120543')
'po-cond01_s1005_d1_2015-11-24_155056',
'po-cond01_s1007_d0_2015-11-25_162543',
inColNames <- read.csv(paste(dataDir,inFileName[6],'_colNames.csv',sep=''),
header=F)
inColNames <- as.character(t(inColNames))
subjIDs <- c('1004','1005','1006','1007','1008','1009','1010')
ws <- data.frame()
inColNames <- read.csv(paste(dataDir,inFileName[6],'_colNames.csv',sep=''),
header=F)
inColNames <- as.character(t(inColNames))
(inColNames)
for (i in 1:length(inFileName) ){
ss <- read.csv(paste(dataDir,inFileName[i],'.csv',sep=''))
colnames(ss) <- c(as.character(inColNames),'subjID')
ss$subjID <- subjIDs[i]
if (i==1){
ws <- ss
}else{
#     ws <- rbind(ws,ss)
ws <- merge(ws,ss,by=inColNames)
}
}
a=c('a','b')
c(a,'c')
for (i in 1:length(inFileName) ){
ss <- read.csv(paste(dataDir,inFileName[i],'.csv',sep=''))
colnames(ss) <- inColNames
ss$subjID <- subjIDs[i]
if (i==1){
}else{
ws <- ss
ws <- merge(ws,ss,by=c(inColNames,'subjID'))
#     ws <- rbind(ws,ss)
}
}
head(ws)
str(factor(ws$respSubjVis))
str(factor(ws$respOdt))
ws$contr <- round(ws$maxContr,3)
ws$contr2 <- round(ws$maxContr,2)
# count the number of hits and misses
ws$unSeen[ws$respSubjVis==1] <- 'unseen'
ws$unSeen[ws$respSubjVis>=2] <- 'seen'
# converting to factor:
ws$curStairc <- as.factor(ws$curStairc)
ws$correct <- 0
ws$correct[ws$respOdt==1 & ws$odtOri==0] <- 1 #left
ws$correct[ws$respOdt==2 & ws$odtOri==1] <- 1 #right
library('lme4')
colnames(ws)
m1 <- glmer(correct~respSubjVis+singlCont+(1|SubjID),data=ws,family=binomial)
m1 <- glmer(correct~respSubjVis+singlCont+(1|subjID),data=ws,family=binomial)
ws$subjID <- as.factor(ws$subjID)
m1 <- glmer(correct~respSubjVis+singlCont+(1|subjID),data=ws,family=binomial)
str(ws)
str(ws$subjID)
clear
clear
library(plyr)
library(ggplot2)
# dataDir <- '~/Dropbox/Projects/po/po-data/'
# inFileName <- c('po-cond01_s1004_d0_2015-11-25_173805',
#               'po-cond01_s1005_d1_2015-11-24_155056',
#               'po-cond01_s1006_d1_2015-11-24_171945',
#               'po-cond01_s1007_d0_2015-11-25_162543',
#               'po-cond01_s1008_d0_2015-11-26_102329',
#               'po-cond01_s1009_d1_2015-11-26_111619',
#               'po-cond01_s1001_d1_2015-11-26_120543')
dataDir <- 'C:/Users/Egor/Dropbox/Projects/po/po-data/'
inFileName <- c('po-cond01_s1003_d0_2015-11-30_150813',
'po-cond01_s1012_d0_2015-11-30_165214',
'po-cond01_s1013_d0_2015-12-01_102648',
'po-cond01_s1014_d0_2015-12-01_132504',
#library('R.matlab')
'po-cond01_s1015_d0_2015-12-01_142913',
'po-cond01_s1017_d0_2015-12-01_162719',
'po-cond01_s1016_d1_2015-12-01_154358',
'po-cond01_s1018_d0_2015-12-02_102653')
subjIDs <- c('1003','1012','1013','1014','1015','1016','1017','1018')
ws <- data.frame()
inColNames <- read.csv(paste(dataDir,inFileName[6],'_colNames.csv',sep=''),
header=F)
inColNames <- as.character(t(inColNames))
(inColNames)
for (i in 1:length(inFileName) ){
ss <- read.csv(paste(dataDir,inFileName[i],'.csv',sep=''))
print(nrow(ss))
colnames(ss) <- inColNames
ss$subjID <- subjIDs[i]
if (i==1){
ws <- ss
}else{
ws <- merge(ws,ss,by=c(inColNames,'subjID'),all=T)
}
}
print(nrow(ws))
ws$contr <- round(ws$maxContr,3)
ws$contr2 <- round(ws$maxContr,2)
# count the number of hits and misses
ws$unSeen[ws$respSubjVis==1] <- 'unseen'
ws$unSeen[ws$respSubjVis>=2] <- 'seen'
# converting to factor:
ws$curStairc <- as.factor(ws$curStairc)
ws$correct <- 0
ws$correct[ws$respOdt==1 & ws$odtOri==0] <- 1 #left
ws$correct[ws$respOdt==2 & ws$odtOri==1] <- 1 #right
ws$subjID <- as.factor(ws$subjID)
wows <- ws[ws$singlCont>0,]
```
# Visualizing the data
sumAccPrim <- ddply(ws[ws$odtLoc==0 & ws$contr2>0.009,], .(respSubjVis,singlCont,subjID),
summarise, accPrim=mean(correct), numTrialsPrim=length(correct))
summarise, accUnpr=mean(correct), numTrialsUnpr=length(correct))
sumAcc <- merge(sumAccPrim, sumAccUnpr, by=c('respSubjVis','singlCont','subjID'))
sumAcc$singlCont <- as.factor(sumAcc$singlCont)
ggplot(data=sumAcc, aes(x=singlCont, y=da, color=singlCont)) +
geom_point(stat='identity',position='dodge',aes(size=ave),alpha=.7) +
facet_grid(.~respSubjVis) + scale_color_brewer() + theme_bw() +
title='Priming benefit on ODT performance')
labs(x='Pop-out salience', y='Priming accuracy benefit (%)', fill='Pop-out salience',
# Plotting the benefit:
sumAccUnpr <- ddply(ws[ws$odtLoc!=0 & ws$contr2>0.009,], .(respSubjVis,singlCont,subjID),
sumAcc$da <- sumAcc$accPrim - sumAcc$accUnpr
sumAcc$respSubjVis <- as.factor(sumAcc$respSubjVis)
sumAcc$ave <- mean(c(sumAcc$numTrialsPrim,sumAcc$numTrialsUnpr))
sumAcc$ave <- (sumAcc$numTrialsPrim+sumAcc$numTrialsUnpr)/2
sumAccPrim <- ddply(ws[ws$odtLoc==0 & ws$contr2>0.009,], .(respSubjVis,singlCont,subjID),
summarise, accPrim=mean(correct), numTrialsPrim=length(correct))
sumAccUnpr <- ddply(ws[ws$odtLoc!=0 & ws$contr2>0.009,], .(respSubjVis,singlCont,subjID),
summarise, accUnpr=mean(correct), numTrialsUnpr=length(correct))
sumAcc <- merge(sumAccPrim, sumAccUnpr, by=c('respSubjVis','singlCont','subjID'))
sumAcc$da <- sumAcc$accPrim - sumAcc$accUnpr
sumAcc$singlCont <- as.factor(sumAcc$singlCont)
sumAcc$respSubjVis <- as.factor(sumAcc$respSubjVis)
sumAcc$ave <- mean(c(sumAcc$numTrialsPrim,sumAcc$numTrialsUnpr))
sumAcc$ave <- (sumAcc$numTrialsPrim+sumAcc$numTrialsUnpr)/2
# Plotting the benefit:
ggplot(data=sumAcc, aes(x=singlCont, y=da, color=singlCont)) +
geom_point(stat='identity',position='dodge',aes(size=ave),alpha=.7) +
facet_grid(.~respSubjVis) + scale_color_brewer() + theme_bw() +
labs(x='Pop-out salience', y='Priming accuracy benefit (%)', fill='Pop-out salience',
title='Priming benefit on ODT performance')
library('lme4')
m1 <- glmer(correct~respSubjVis*singlCont+(1|subjID),data=wows,family=binomial)
se <- sqrt(diag(vcov(m1))) # getting the standard errors for CI estimation
( tab <- cbind(Est=fixef(m1),LL=fixef(m1)-1.96*se,UL=fixef(m1)+1.96*se) )
summary(m1)
m2 <- glmer(correct~respSubjVis*singlCont+(1|subjID),data=wows[wows$respSubjVis!=2 & wows$respSubjVis!=3,],family=binomial)
se <- sqrt(diag(vcov(m1))) # getting the standard errors for CI estimation
( tab <- cbind(Est=fixef(m1),LL=fixef(m1)-1.96*se,UL=fixef(m1)+1.96*se) )
(summary(m2))
m3 <- glmer(correct~singlCont+(1|subjID),data=wows[wows$respSubjVis==2,],family=binomial)
(summary(m3))
m3 <- glmer(correct~singlCont+(1|subjID),data=wows[wows$respSubjVis==1,],family=binomial)
(summary(m3))
m4 <- glmer(correct~singlCont+(1|subjID),data=wows[wows$respSubjVis==4,],family=binomial)
(summary(m4))
dataDir <- 'C:/Users/Egor/Dropbox/Projects/po/po-data/'
inFileName <- c('po-cond01_s1004_d0_2015-11-25_173805',
'po-cond01_s1005_d1_2015-11-24_155056',
'po-cond01_s1006_d1_2015-11-24_171945',
'po-cond01_s1007_d0_2015-11-25_162543',
'po-cond01_s1008_d0_2015-11-26_102329',
'po-cond01_s1009_d1_2015-11-26_111619',
'po-cond01_s1001_d1_2015-11-26_120543',
'po-cond01_s1003_d0_2015-11-30_150813',
# inFileName <- c('po-cond01_s1003_d0_2015-11-30_150813',
'po-cond01_s1012_d0_2015-11-30_165214',
'po-cond01_s1013_d0_2015-12-01_102648',
'po-cond01_s1014_d0_2015-12-01_132504',
'po-cond01_s1015_d0_2015-12-01_142913',
'po-cond01_s1016_d1_2015-12-01_154358',
'po-cond01_s1017_d0_2015-12-01_162719',
'po-cond01_s1018_d0_2015-12-02_102653')
# subjIDs <- c('1003','1012','1013','1014','1015','1016','1017','1018')
subjIDs <- c('1004','1005','1006','1007','1008','1009','1000','1003','1012','1013','1014','1015','1016','1017','1018')
ws <- data.frame()
inColNames <- read.csv(paste(dataDir,inFileName[6],'_colNames.csv',sep=''),
header=F)
subjIDs <- c('1004','1005','1006','1007','1008','1009','1000','1003','1012','1013','1014','1015','1016','1017','1018')
ws <- data.frame()
inColNames <- read.csv(paste(dataDir,inFileName[6],'_colNames.csv',sep=''),
header=F)
inColNames <- as.character(t(inColNames))
(inColNames)
for (i in 1:length(inFileName) ){
ss <- read.csv(paste(dataDir,inFileName[i],'.csv',sep=''))
print(nrow(ss))
colnames(ss) <- inColNames
ss$subjID <- subjIDs[i]
if (i==1){
ws <- ss
}else{
ws <- merge(ws,ss,by=c(inColNames,'subjID'),all=T)
}
}
print(nrow(ws))
ws$contr <- round(ws$maxContr,3)
ws$contr2 <- round(ws$maxContr,2)
# count the number of hits and misses
ws$unSeen[ws$respSubjVis==1] <- 'unseen'
ws$unSeen[ws$respSubjVis>=2] <- 'seen'
# converting to factor:
ws$curStairc <- as.factor(ws$curStairc)
ws$correct <- 0
ws$correct[ws$respOdt==1 & ws$odtOri==0] <- 1 #left
ws$correct[ws$respOdt==2 & ws$odtOri==1] <- 1 #right
ws$subjID <- as.factor(ws$subjID)
wows <- ws[ws$singlCont>0,]
```
# Visualizing the data
```{r, fig.width=10}
# Showing the accuracy for each level of subjective visibility (no contrast matching)
# The difference between 6 (opposite ODT location) and 0 (same location) is the
# pop-out benefit:
sumAccPrim <- ddply(ws[ws$odtLoc==0 & ws$contr2>0.009,], .(respSubjVis,singlCont,subjID),
summarise, accPrim=mean(correct), numTrialsPrim=length(correct))
sumAccUnpr <- ddply(ws[ws$odtLoc!=0 & ws$contr2>0.009,], .(respSubjVis,singlCont,subjID),
summarise, accUnpr=mean(correct), numTrialsUnpr=length(correct))
sumAcc <- merge(sumAccPrim, sumAccUnpr, by=c('respSubjVis','singlCont','subjID'))
sumAcc$da <- sumAcc$accPrim - sumAcc$accUnpr
sumAcc$singlCont <- as.factor(sumAcc$singlCont)
sumAcc$respSubjVis <- as.factor(sumAcc$respSubjVis)
sumAcc$ave <- mean(c(sumAcc$numTrialsPrim,sumAcc$numTrialsUnpr))
sumAcc$ave <- (sumAcc$numTrialsPrim+sumAcc$numTrialsUnpr)/2
# Plotting the benefit:
ggplot(data=sumAcc, aes(x=singlCont, y=da, color=singlCont)) +
geom_point(stat='identity',position='dodge',aes(size=ave),alpha=.7) +
facet_grid(.~respSubjVis) + scale_color_brewer() + theme_bw() +
labs(x='Pop-out salience', y='Priming accuracy benefit (%)', fill='Pop-out salience',
title='Priming benefit on ODT performance')
library('lme4')
m1 <- glmer(correct~respSubjVis*singlCont+(1|subjID),data=wows,family=binomial)
se <- sqrt(diag(vcov(m1))) # getting the standard errors for CI estimation
( tab <- cbind(Est=fixef(m1),LL=fixef(m1)-1.96*se,UL=fixef(m1)+1.96*se) )
(summary(m1))
se <- sqrt(diag(vcov(m1))) # getting the standard errors for CI estimation
( tab <- cbind(Est=fixef(m1),LL=fixef(m1)-1.96*se,UL=fixef(m1)+1.96*se) )
m2 <- glmer(correct~respSubjVis*singlCont+(1|subjID),data=wows[wows$respSubjVis!=2 & wows$respSubjVis!=3,],family=binomial)
(summary(m2))
se <- sqrt(diag(vcov(m1))) # getting the standard errors for CI estimation
( tab <- cbind(Est=fixef(m1),LL=fixef(m1)-1.96*se,UL=fixef(m1)+1.96*se) )
m3 <- glmer(correct~singlCont+(1|subjID),data=wows[wows$respSubjVis==1,],family=binomial)
(summary(m3))
se <- sqrt(diag(vcov(m1))) # getting the standard errors for CI estimation
( tab <- cbind(Est=fixef(m1),LL=fixef(m1)-1.96*se,UL=fixef(m1)+1.96*se) )
m4 <- glmer(correct~singlCont+(1|subjID),data=wows[wows$respSubjVis==4,],family=binomial)
(summary(m4))
```
ggplot(data=sumAcc, aes(x=singlCont, y=da, color=subjID)) +
```
# Logistic models
library(plyr)
library(ggplot2)
#library('R.matlab')
# dataDir <- '~/Dropbox/Projects/po/po-data/'
dataDir <- 'C:/Users/Egor/Dropbox/Projects/po/po-data/'
# inFileName <- c('po-cond01_s1004_d0_2015-11-25_173805',
#               'po-cond01_s1005_d1_2015-11-24_155056',
#               'po-cond01_s1006_d1_2015-11-24_171945',
#               'po-cond01_s1007_d0_2015-11-25_162543',
#               'po-cond01_s1008_d0_2015-11-26_102329',
#               'po-cond01_s1009_d1_2015-11-26_111619',
#               'po-cond01_s1001_d1_2015-11-26_120543',
#               'po-cond01_s1003_d0_2015-11-30_150813',
inFileName <- c('po-cond01_s1001_d0_2015-12-02_182532',
'po-cond01_s1003_d0_2015-11-30_150813',
'po-cond01_s1004_d0_2015-12-02_140822',
'po-cond01_s1012_d0_2015-11-30_165214',
'po-cond01_s1013_d0_2015-12-01_102648',
'po-cond01_s1014_d0_2015-12-01_132504',
'po-cond01_s1015_d0_2015-12-01_142913',
'po-cond01_s1016_d1_2015-12-01_154358',
'po-cond01_s1017_d0_2015-12-01_162719',
'po-cond01_s1018_d0_2015-12-02_102653',
'po-cond01_s1019_d0_2015-12-02_132947_fixed')
subjIDs <- c('1001','1003','1004','1012','1013','1014','1015','1016','1017','1018','1019')
# subjIDs <- c('1004','1005','1006','1007','1008','1009','1000','1003','1012','1013','1014','1015','1016','1017','1018')
ws <- data.frame()
inColNames <- read.csv(paste(dataDir,inFileName[6],'_colNames.csv',sep=''),
header=F)
inColNames <- as.character(t(inColNames))
(inColNames)
for (i in 1:length(inFileName) ){
ss <- read.csv(paste(dataDir,inFileName[i],'.csv',sep=''))
print(nrow(ss))
colnames(ss) <- inColNames
ss$subjID <- subjIDs[i]
if (i==1){
ws <- ss
}else{
ws <- merge(ws,ss,by=c(inColNames,'subjID'),all=T)
}
}
print(nrow(ws))
ws$contr <- round(ws$maxContr,3)
ws$contr2 <- round(ws$maxContr,2)
# count the number of hits and misses
ws$unSeen[ws$respSubjVis==1] <- 'unseen'
ws$unSeen[ws$respSubjVis>=2] <- 'seen'
# converting to factor:
ws$curStairc <- as.factor(ws$curStairc)
ws$correct <- 0
ws$correct[ws$respOdt==1 & ws$odtOri==0] <- 1 #left
ws$correct[ws$respOdt==2 & ws$odtOri==1] <- 1 #right
ws$subjID <- as.factor(ws$subjID)
sumAccPrim <- ddply(ws[ws$odtLoc==0 & ws$contr2>0.009,], .(respSubjVis,singlCont,subjID),
summarise, accPrim=mean(correct), numTrialsPrim=length(correct))
sumAccUnpr <- ddply(ws[ws$odtLoc!=0 & ws$contr2>0.009,], .(respSubjVis,singlCont,subjID),
summarise, accUnpr=mean(correct), numTrialsUnpr=length(correct))
sumAcc <- merge(sumAccPrim, sumAccUnpr, by=c('respSubjVis','singlCont','subjID'))
sumAcc$da <- sumAcc$accPrim - sumAcc$accUnpr
sumAcc$singlCont <- as.factor(sumAcc$singlCont)
sumAcc$respSubjVis <- as.factor(sumAcc$respSubjVis)
sumAcc$ave <- mean(c(sumAcc$numTrialsPrim,sumAcc$numTrialsUnpr))
sumAcc$ave <- (sumAcc$numTrialsPrim+sumAcc$numTrialsUnpr)/2
# Plotting the benefit:
ggplot(data=sumAcc, aes(x=singlCont, y=da, color=subjID)) +
geom_point(stat='identity',position='dodge',aes(size=ave),alpha=.7) +
facet_grid(.~respSubjVis) + theme_bw() + #scale_color_brewer() +
labs(x='Pop-out salience', y='Priming accuracy benefit (%)', fill='Pop-out salience',
title='Priming benefit on ODT performance') +
geom_smooth(aes(group=subjID), method='lm', formula=y~ns(x,3), alpha=.2, se=F)
ws <- ws[ws$subjID %in% c('1001','1003','1004'), ]
wows <- ws[ws$singlCont>0,]
sumAccPrim <- ddply(ws[ws$odtLoc==0 & ws$contr2>0.009,], .(respSubjVis,singlCont,subjID),
summarise, accPrim=mean(correct), numTrialsPrim=length(correct))
sumAccUnpr <- ddply(ws[ws$odtLoc!=0 & ws$contr2>0.009,], .(respSubjVis,singlCont,subjID),
summarise, accUnpr=mean(correct), numTrialsUnpr=length(correct))
sumAcc <- merge(sumAccPrim, sumAccUnpr, by=c('respSubjVis','singlCont','subjID'))
sumAcc$da <- sumAcc$accPrim - sumAcc$accUnpr
sumAcc$singlCont <- as.factor(sumAcc$singlCont)
sumAcc$respSubjVis <- as.factor(sumAcc$respSubjVis)
sumAcc$ave <- mean(c(sumAcc$numTrialsPrim,sumAcc$numTrialsUnpr))
sumAcc$ave <- (sumAcc$numTrialsPrim+sumAcc$numTrialsUnpr)/2
ggplot(data=sumAcc, aes(x=singlCont, y=da, color=subjID)) +
geom_point(stat='identity',position='dodge',aes(size=ave),alpha=.7) +
facet_grid(.~respSubjVis) + theme_bw() + #scale_color_brewer() +
labs(x='Pop-out salience', y='Priming accuracy benefit (%)', fill='Pop-out salience',
title='Priming benefit on ODT performance') +
geom_smooth(aes(group=subjID), method='lm', formula=y~ns(x,3), alpha=.2, se=F)
ggplot(data=sumAcc, aes(x=singlCont, y=da, color=subjID)) +
geom_point(stat='identity',position='dodge',aes(size=ave),alpha=.7) +
facet_grid(.~respSubjVis) + theme_bw() + #scale_color_brewer() +
labs(x='Pop-out salience', y='Priming accuracy benefit (%)', fill='Pop-out salience',
title='Priming benefit on ODT performance') +
geom_smooth(aes(group=subjID), method='lm', formula=y~x^2, alpha=.2, se=F)
ggplot(data=sumAcc, aes(x=singlCont, y=da, color=subjID)) +
geom_point(stat='identity',position='dodge',aes(size=ave),alpha=.7) +
facet_grid(.~respSubjVis) + theme_bw() + #scale_color_brewer() +
labs(x='Pop-out salience', y='Priming accuracy benefit (%)', fill='Pop-out salience',
title='Priming benefit on ODT performance') +
geom_smooth(aes(group=subjID), method='lm', formula=y~1/(1+e^-x), alpha=.2, se=F)
ggplot(data=sumAcc, aes(x=singlCont, y=da, color=subjID)) +
geom_point(stat='identity',position='dodge',aes(size=ave),alpha=.7) +
facet_grid(.~respSubjVis) + theme_bw() + #scale_color_brewer() +
labs(x='Pop-out salience', y='Priming accuracy benefit (%)', fill='Pop-out salience',
title='Priming benefit on ODT performance') +
geom_smooth(aes(group=subjID), method='lm', formula=y~1/(1+e^(-x)), alpha=.2, se=F)
e
ggplot(data=sumAcc, aes(x=singlCont, y=da, color=subjID)) +
geom_point(stat='identity',position='dodge',aes(size=ave),alpha=.7) +
facet_grid(.~respSubjVis) + theme_bw() + #scale_color_brewer() +
labs(x='Pop-out salience', y='Priming accuracy benefit (%)', fill='Pop-out salience',
title='Priming benefit on ODT performance') +
geom_smooth(aes(group=subjID), method='lm', formula=y~1/(1+exp(1)^(-x)), alpha=.2, se=F)
exp(1)
exp(1)^(-1)
ggplot(data=sumAcc, aes(x=singlCont, y=da, color=subjID)) +
geom_point(stat='identity',position='dodge',aes(size=ave),alpha=.7) +
facet_grid(.~respSubjVis) + theme_bw() + #scale_color_brewer() +
labs(x='Pop-out salience', y='Priming accuracy benefit (%)', fill='Pop-out salience',
title='Priming benefit on ODT performance') +
geom_smooth(aes(group=subjID), method='lm', formula=y~x^3, alpha=.2, se=F)
ggplot(data=sumAcc, aes(x=singlCont, y=da, color=subjID)) +
geom_point(stat='identity',position='dodge',aes(size=ave),alpha=.7) +
facet_grid(.~respSubjVis) + theme_bw() + #scale_color_brewer() +
labs(x='Pop-out salience', y='Priming accuracy benefit (%)', fill='Pop-out salience',
title='Priming benefit on ODT performance') +
geom_smooth(aes(group=subjID), method='nls', formula=y~x^3, alpha=.2, se=F)
ggplot(data=sumAcc, aes(x=singlCont, y=da, color=subjID)) +
geom_point(stat='identity',position='dodge',aes(size=ave),alpha=.7) +
facet_grid(.~respSubjVis) + theme_bw() + #scale_color_brewer() +
labs(x='Pop-out salience', y='Priming accuracy benefit (%)', fill='Pop-out salience',
title='Priming benefit on ODT performance') +
geom_smooth(aes(group=subjID), method='nls', formula=y~poly(x,2), alpha=.2, se=F)
ggplot(data=sumAcc, aes(x=singlCont, y=da, color=subjID)) +
geom_point(stat='identity',position='dodge',aes(size=ave),alpha=.7) +
facet_grid(.~respSubjVis) + theme_bw() + #scale_color_brewer() +
labs(x='Pop-out salience', y='Priming accuracy benefit (%)', fill='Pop-out salience',
title='Priming benefit on ODT performance') +
geom_smooth(aes(group=subjID), method='lm', formula=y~poly(x,2), alpha=.2, se=F)
