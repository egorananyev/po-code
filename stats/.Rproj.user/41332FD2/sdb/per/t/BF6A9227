{
    "contents" : "---\ntitle: \"PO Group\"\nauthor: \"Egor Ananyev\"\ndate: \"25 November 2015\"\noutput: html_document\n---\n\n# Loading the data\n```{r}\nlibrary(plyr)\nlibrary(ggplot2)\n#library('R.matlab')\n# dataDir <- '~/Dropbox/Projects/po/po-data/'\ndataDir <- 'C:/Users/Egor/Dropbox/Projects/po/po-data/'\n# inFileName <- c('po-cond01_s1004_d0_2015-11-25_173805',\n#               'po-cond01_s1005_d1_2015-11-24_155056',\n#               'po-cond01_s1006_d1_2015-11-24_171945',\n#               'po-cond01_s1007_d0_2015-11-25_162543',\n#               'po-cond01_s1008_d0_2015-11-26_102329',\n#               'po-cond01_s1009_d1_2015-11-26_111619',\n#               'po-cond01_s1001_d1_2015-11-26_120543',\n#               'po-cond01_s1003_d0_2015-11-30_150813',\ninFileName <- c('po-cond01_s1001_d0_2015-12-02_182532',\n                'po-cond01_s1003_d0_2015-11-30_150813',\n                'po-cond01_s1004_d0_2015-12-02_140822',\n                'po-cond01_s1012_d0_2015-11-30_165214',\n                'po-cond01_s1013_d0_2015-12-01_102648',\n                'po-cond01_s1014_d0_2015-12-01_132504',\n                'po-cond01_s1015_d0_2015-12-01_142913',\n                'po-cond01_s1016_d1_2015-12-01_154358',\n                'po-cond01_s1017_d0_2015-12-01_162719',\n                'po-cond01_s1018_d0_2015-12-02_102653',\n                'po-cond01_s1019_d0_2015-12-02_132947_fixed')\nsubjIDs <- c('1001','1003','1004','1012','1013','1014','1015','1016','1017','1018','1019')\n# subjIDs <- c('1004','1005','1006','1007','1008','1009','1000','1003','1012','1013','1014','1015','1016','1017','1018')\nws <- data.frame()\ninColNames <- read.csv(paste(dataDir,inFileName[6],'_colNames.csv',sep=''),\n                      header=F)\ninColNames <- as.character(t(inColNames))\n(inColNames)\nfor (i in 1:length(inFileName) ){\n  ss <- read.csv(paste(dataDir,inFileName[i],'.csv',sep=''))\n  print(nrow(ss))\n  colnames(ss) <- inColNames\n  ss$subjID <- subjIDs[i]\n  if (i==1){\n    ws <- ss\n  }else{\n    ws <- merge(ws,ss,by=c(inColNames,'subjID'),all=T)\n  }\n}\nprint(nrow(ws))\n  \nws$contr <- round(ws$maxContr,3)\nws$contr2 <- round(ws$maxContr,2)\n# count the number of hits and misses\nws$unSeen[ws$respSubjVis==1] <- 'unseen'\nws$unSeen[ws$respSubjVis>=2] <- 'seen'\n# converting to factor:\nws$curStairc <- as.factor(ws$curStairc)\nws$correct <- 0\nws$correct[ws$respOdt==1 & ws$odtOri==0] <- 1 #left\nws$correct[ws$respOdt==2 & ws$odtOri==1] <- 1 #right\nws$subjID <- as.factor(ws$subjID)\n```\n\n# Subject quality checks\n```{r, fig.width=10}\n( ddply(ws, .(subjID), summarise,\n        subjAccuracy=mean(correct), blocksComplete=max(block)) )\n# Subjects 14, 16, and 19 completed fewer than 34 blocks.\n# Subjects 13, 15, and 16 perform at chance on ODT\n\n# Exclude 16 (<20 blocks) and 13 & 15 (chance ODT):\nws <- ws[!ws$subjID %in% c('1013','1015','1016'), ]\n# ws <- ws[ws$subjID %in% c('1001','1003','1004'), ]\nwows <- ws[ws$singlCont>0,]\n```\n\n# Visualizing the data\n```{r, fig.width=10}\n# Showing the accuracy for each level of subjective visibility (no contrast matching)\n# The difference between 6 (opposite ODT location) and 0 (same location) is the\n# pop-out benefit:\nsumAccPrim <- ddply(ws[ws$odtLoc==0 & ws$contr2>0.009,], .(respSubjVis,singlCont,subjID),\n            summarise, accPrim=mean(correct), numTrialsPrim=length(correct))\nsumAccUnpr <- ddply(ws[ws$odtLoc!=0 & ws$contr2>0.009,], .(respSubjVis,singlCont,subjID),\n            summarise, accUnpr=mean(correct), numTrialsUnpr=length(correct))\nsumAcc <- merge(sumAccPrim, sumAccUnpr, by=c('respSubjVis','singlCont','subjID'))\nsumAcc$da <- sumAcc$accPrim - sumAcc$accUnpr\nsumAcc$singlCont <- as.factor(sumAcc$singlCont)\nsumAcc$respSubjVis <- as.factor(sumAcc$respSubjVis)\nsumAcc$ave <- mean(c(sumAcc$numTrialsPrim,sumAcc$numTrialsUnpr))\nsumAcc$ave <- (sumAcc$numTrialsPrim+sumAcc$numTrialsUnpr)/2\n# Plotting the benefit:\nggplot(data=sumAcc, aes(x=singlCont, y=da, color=subjID)) + \n  geom_point(stat='identity',position='dodge',aes(size=ave),alpha=.7) + \n  facet_grid(.~respSubjVis) + theme_bw() + #scale_color_brewer() + \n  labs(x='Pop-out salience', y='Priming accuracy benefit (%)', fill='Pop-out salience',\n    title='Priming benefit on ODT performance') +\n  geom_smooth(aes(group=subjID), method='lm', formula=y~poly(x,2), alpha=.2, se=F)\nggplot(data=sumAcc, aes(x=singlCont, y=da, color=subjID)) + \n  geom_point(stat='identity',position='dodge',aes(size=ave),alpha=.7) + \n  facet_grid(.~respSubjVis) + theme_bw() + #scale_color_brewer() + \n  labs(x='Pop-out salience', y='Priming accuracy benefit (%)', fill='Pop-out salience',\n    title='Priming benefit on ODT performance') +\n  geom_smooth(aes(group=subjID), method='lm', alpha=.2, se=F)\n\nsumAccPrim <- ddply(ws[ws$odtLoc==0 & ws$contr2>0.009 & ws$primCol==1,], .(respSubjVis,singlCont,subjID),\n            summarise, accPrim=mean(correct), numTrialsPrim=length(correct))\nsumAccUnpr <- ddply(ws[ws$odtLoc!=0 & ws$contr2>0.009 & ws$primCol==1,], .(respSubjVis,singlCont,subjID),\n            summarise, accUnpr=mean(correct), numTrialsUnpr=length(correct))\nsumAcc <- merge(sumAccPrim, sumAccUnpr, by=c('respSubjVis','singlCont','subjID'))\nsumAcc$da <- sumAcc$accPrim - sumAcc$accUnpr\nsumAcc$singlCont <- as.factor(sumAcc$singlCont)\nsumAcc$respSubjVis <- as.factor(sumAcc$respSubjVis)\nsumAcc$ave <- mean(c(sumAcc$numTrialsPrim,sumAcc$numTrialsUnpr))\nsumAcc$ave <- (sumAcc$numTrialsPrim+sumAcc$numTrialsUnpr)/2\n# Plotting the benefit:\nggplot(data=sumAcc, aes(x=singlCont, y=da, color=subjID)) + \n  geom_point(stat='identity',position='dodge',aes(size=ave),alpha=.7) + \n  facet_grid(.~respSubjVis) + theme_bw() +\n  labs(x='Pop-out salience', y='Priming accuracy benefit (%)', fill='Pop-out salience',\n    title='Priming benefit on ODT performance') +\n  geom_smooth(aes(group=subjID), method='lm', alpha=.2, se=F)\n\nsumAccPrim <- ddply(ws[ws$odtLoc==0 & ws$contr2>0.009 & ws$primCol==2,], \n                    .(respSubjVis,singlCont,subjID),\n            summarise, accPrim=mean(correct), numTrialsPrim=length(correct))\nsumAccUnpr <- ddply(ws[ws$odtLoc!=0 & ws$contr2>0.009 & ws$primCol==2,], \n                    .(respSubjVis,singlCont,subjID),\n            summarise, accUnpr=mean(correct), numTrialsUnpr=length(correct))\nsumAcc <- merge(sumAccPrim, sumAccUnpr, by=c('respSubjVis','singlCont','subjID'))\nsumAcc$da <- sumAcc$accPrim - sumAcc$accUnpr\nsumAcc$singlCont <- as.factor(sumAcc$singlCont)\nsumAcc$respSubjVis <- as.factor(sumAcc$respSubjVis)\nsumAcc$ave <- mean(c(sumAcc$numTrialsPrim,sumAcc$numTrialsUnpr))\nsumAcc$ave <- (sumAcc$numTrialsPrim+sumAcc$numTrialsUnpr)/2\n# Plotting the benefit:\nggplot(data=sumAcc, aes(x=singlCont, y=da, color=subjID)) + \n  geom_point(stat='identity',position='dodge',aes(size=ave),alpha=.7) + \n  facet_grid(.~respSubjVis) + theme_bw() +\n  labs(x='Pop-out salience', y='Priming accuracy benefit (%)', fill='Pop-out salience',\n    title='Priming benefit on ODT performance') +\n  geom_smooth(aes(group=subjID), method='lm', alpha=.2, se=F)\n```\n\n# Logistic models\n```{r, fig.width=10}\nlibrary('lme4')\n\n# General, unrefined model\nm1 <- glmer(correct~0+respSubjVis*singlCont+(1|subjID),data=wows,family=binomial)\n(summary(m1))\nse <- sqrt(diag(vcov(m1))) # getting the standard errors for CI estimation\n( tab <- cbind(Est=fixef(m1),LL=fixef(m1)-1.96*se,UL=fixef(m1)+1.96*se) )\n\n# Dropping visibility ratings 2 and 3\nm2 <- glmer(correct~0+respSubjVis*singlCont+(1|subjID),\n            data=wows[wows$respSubjVis!=2 & wows$respSubjVis!=3,],family=binomial)\n(summary(m2))\nse <- sqrt(diag(vcov(m2))) # getting the standard errors for CI estimation\n( tab <- cbind(Est=fixef(m2),LL=fixef(m2)-1.96*se,UL=fixef(m2)+1.96*se) )\n\n# Invisible trials\nm3 <- glmer(correct~singlCont+(singlCont|subjID),\n            data=wows[wows$respSubjVis==1,],family=binomial)\nm3 <- glmer(correct~0+singlCont+(singlCont|subjID),\n            data=wows[wows$respSubjVis==1,],family=binomial)\n(summary(m3))\nse <- sqrt(diag(vcov(m3))) # getting the standard errors for CI estimation\n( tab <- cbind(Est=fixef(m3),LL=fixef(m3)-1.96*se,UL=fixef(m3)+1.96*se) )\n( coefs <- coef(m3)$subjID )\n( ranefs <- ranef(m3)$subjID )\n\n# coefs <- ddply(wows, .(subjID), function(wows) {\n#   m <- lm(correct~singlCont, data=wows)\n#   data.frame(a = coef(wows)[1], b = coef(wows)[2])\n# })\n\n# ggplot(data=sumAcc[sumAcc$respSubjVis==1,], aes(x=singlCont, y=da)) + \n#   geom_point(stat='identity',position='dodge',aes(size=ave),alpha=.7) +\n#   geom_abline(data=coefs, aes(intercept=Intercept, slope=singlCont))\n\n# Visible trials\nm4 <- glmer(correct~0+singlCont+(singlCont|subjID),\n            data=wows[wows$respSubjVis==4,],family=binomial)\n(summary(m4))\nse <- sqrt(diag(vcov(m4))) # getting the standard errors for CI estimation\n( tab <- cbind(Est=fixef(m4),LL=fixef(m4)-1.96*se,UL=fixef(m4)+1.96*se) )\n( coef(m4)$subjID )\n```\n",
    "created" : 1448504424443.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2358181040",
    "id" : "BF6A9227",
    "lastKnownWriteTime" : 1449068072,
    "path" : "C:/Users/Egor/Dropbox/Projects/po/po-code/stats/po-group.Rmd",
    "project_path" : "po-group.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}